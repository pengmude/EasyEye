<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwExceptions="true"  internalLogLevel="Fatal"
      internalLogFile="c:\temp\nlog-internal.log">

	<!--此部分中的所有目标将自动异步-->
	<targets>
		<target name="asyncFile" xsi:type="AsyncWrapper">
			<target xsi:type="RetryingWrapper">
				<target xsi:type="file" name="File"
                        createDirs="true"
                        fileName="C:/SmartEyeLog/${date:format=yyyy-MM-dd}/${level}.log"
                        layout="[${longdate}] [${level}] ${message} ${exception:format=ToString:innerFormat=ToString:maxInnerExceptionLevel=10:separator=\r\n} "
                        archiveFileName="C:/SmartEyeLog/LogArchives/${date:format=yyyy-MM}/${logger}-${level}-${shortdate}-{##}.txt"
                        archiveAboveSize="1024000"
                        archiveEvery="Day"
                        maxArchiveFiles="30"
                        archiveNumbering="DateAndSequence"
                        concurrentWrites="true"
                        openFileCacheTimeout="30"
                        maxArchiveDays="1"
                        encoding="UTF-8" />
			</target>
		</target>
		<!--
        xsi:type:将文件类型设置为File，将日志保存到文件中。
        fileName:将日志文件保存到"${basedir}/Log/log.txt"。
        archiveFileName:为了防止日志文件保存的太大，我们将日志文件拆分保存。通过archiveFileName参数设置保存格式
        createDirs:若设置的日志文件夹不存在，则自动创建文件夹。
        keepFileOpen:为了提高文件写入性能，避免每次写入文件都开关文件，将keepFileOpen设置为true,我们通过openFileCacheTimeout参数定时关闭文件。
        autoFlush:为了提高日志写入性能，不必每次写入日志都直接写入到硬盘上，将autoFlush设置为false,我们通过openFileFlushTimeout参数定时写入文件。
        openFileCacheTimeout:将keepFileOpen参数设置为false，则设置定时关闭日志。防止日志一直开着占用着。
        openFileFlushTimeout:将autoFlush参数设置为false，则设置定时将日志从缓存写入到硬盘时间。
        archiveAboveSize:为了防止一个文件日志太大，我们需要根据指定大小将日志拆文件保存。archiveAboveSize参数的单位是字节。
        通过设置为10240=10KB，每个日志大小达到10KB就会自动拆分文件，拆分后的文件名规则通过archiveFileName设置，拆分文件名的规则通过archiveNumbering设置.
        maxArchiveFiles:设置最大归档文件数,超过这个数字会删除较早的归档,以方磁盘空间不足
        concurrentWrites:支持多个并发一起写文件，提高文件写入性能。
        encoding: Nlog默认保存的编码格式为Encoding.Default,中文保存到日志中会出现乱码，将其设置为utf-8,就可以正常保存了。-->
		<!--使用可自定义的着色将日志消息写入控制台-->
		<!--<target name="colorConsole" xsi:type="ColoredConsole" layout="[${date:format=yyyy-MM-dd HH\:mm\:ss}]:${message} ${exception:format=message}">
            <highlight-row condition="level == LogLevel.Debug" foregroundColor="DarkGray" />
            <highlight-row condition="level == LogLevel.Info" foregroundColor="Gray" />
            <highlight-row condition="level == LogLevel.Warn" foregroundColor="Yellow" />
            <highlight-row condition="level == LogLevel.Error" foregroundColor="Red" />
            <highlight-row condition="level == LogLevel.Fatal" foregroundColor="Red" backgroundColor="White" />
        </target>-->
	</targets>

	<rules>
		<logger name="Microsoft.*" minlevel="Info" writeTo="" final="true" />
		<logger name="*" minlevel="Info" writeTo="asyncFile" />
		<!--<logger name="*" minlevel="Debug" writeTo="colorConsole" />-->
	</rules>
</nlog>